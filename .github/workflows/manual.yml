# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  checkout_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: dunedaq/sl7-minimal:dev

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"

    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: DUNE-DAQ/daq-buildtools
        path: daq-buildtools

    - name: Checkout tools repo
      uses: actions/checkout@v2
      with:
        repository: DUNE-DAQ/daq-release
        path: daq-release
        
    - name: show path
      run: |
          pwd
          ls $GITHUB_WORKSPACE
          export DBT_ROOT=$GITHUB_WORKSPACE/daq-buildtools
          source ${DBT_ROOT}/scripts/dbt-setup-tools.sh
          add_many_paths PATH ${DBT_ROOT}/bin ${DBT_ROOT}/scripts
          dbt-create.sh -r $GITHUB_WORKSPACE/daq-release/configs dunedaq-develop dev
          cd dev
          cp $GITHUB_WORKSPACE/daq-release/configs/dunedaq-develop/release_manifest.sh .
          $GITHUB_WORKSPACE/daq-release/scripts/checkout-package.sh -f ./release_manifest.sh -a -b develop -o sourcecode
          export DBT_AREA_ROOT=$PWD
          source ${DBT_AREA_ROOT}/${DBT_AREA_FILE}
          setup_ups_product_areas
          echo "setup ups area dbt complete"
          setup python ${dune_python_version}
          echo "setup python complete"
          source ${DBT_AREA_ROOT}/${DBT_VENV}/bin/activate
          echo "activated python venv"
          setup_ups_products dune_devtools
          setup_ups_products dune_systems
          setup_ups_products dune_externals
          export DBT_INSTALL_DIR=${DBT_AREA_ROOT}/install
          export DBT_SETUP_BUILD_ENVIRONMENT_SCRIPT_SOURCED=1
          dbt-build.sh --install

          

